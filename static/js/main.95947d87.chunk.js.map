{"version":3,"sources":["Components/Home/Button.js","Components/Home/Nav.js","Components/Home/Home.js","Components/Banner/Banner.js","Components/Products/ProductCard/ProductCard.js","Components/Products/Products.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","className","Nav","href","Home","id","alt","src","Home_Button","Components_Home_Nav","Component","Banner","ProductCard","srcImg","title","Products","Products_ProductCard_ProductCard","Footer","App","Components_Home_Home","Components_Banner_Banner","Components_Products_Products","Components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gXASeA,EAPA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,uBCOGE,SAVH,WACR,OACIJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,QAAR,SACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAR,uBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAR,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAR,gBCWDC,0LAXP,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,GAAG,QACrBP,EAAAC,EAAAC,cAAA,OAAKM,IAAI,OAAOL,UAAU,OAAOM,IAAI,iBACrCT,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACQ,EAAD,MACAV,EAAAC,EAAAC,cAACS,EAAD,cARGC,cCaJC,0LAbP,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,SAASC,IAAI,iBAAiBN,UAAU,WACjDH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,iBAAiBC,IAAI,eAAeN,UAAU,gBACvDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,8HARCU,cCQNE,eATK,SAACf,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKO,IAAKV,EAAMgB,SAChBf,EAAAC,EAAAC,cAAA,UAAKH,EAAMiB,UCaRC,mLAbP,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAIL,EAAAC,EAAAC,cAACgB,EAAD,CAAaH,OAAO,iBAAiBC,MAAM,YACvDhB,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAIL,EAAAC,EAAAC,cAACgB,EAAD,CAAaH,OAAO,uBAAuBC,MAAM,kBAC7DhB,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAIL,EAAAC,EAAAC,cAACgB,EAAD,CAAaH,OAAO,uBAAuBC,MAAM,8BAR1DJ,aCaRO,0LAZP,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,6BAA4BL,EAAAC,EAAAC,cAAA,OAAKO,IAAI,aAAaD,IAAI,eAC9DR,EAAAC,EAAAC,cAAA,2BARCU,cCeNQ,MAXf,WACE,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACsB,EAAD,QCDcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.95947d87.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = (props)=>{\r\n    return(\r\n        <div className='Button'>\r\n            <h2>COMPRAR</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default Button;","import React from 'react';\r\nimport './Nav.css';\r\nconst Nav = ()=>{\r\n    return(\r\n        <ul className='Nav'>\r\n            <li><a href='Home'>HOME</a></li>\r\n            <li><a href='#'>¿QUIENES SOMOS?</a></li>\r\n            <li><a href='#'>COMPRAR</a></li>\r\n            <li><a href='#'>CONTACTO</a></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default Nav;","import React, {Component} from 'react';\r\nimport Button from './Button';\r\nimport Nav from './Nav';\r\nimport './Home.css';\r\n\r\nclass Home extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className='Home' id='Home'>\r\n                <img alt='Logo' className='logo' src='img/logo.png'/>\r\n                <h1>artod.</h1>\r\n                <Button/>\r\n                <Nav/>\r\n            </div>\r\n        )\r\n     }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport './Banner.css';\r\n\r\nclass Banner extends Component{\r\n    render(){\r\n        return(\r\n            <div className='Banner'>\r\n                <img alt='tobaco' src='img/tobaco.jpg' className='tobaco'/>\r\n                <img alt='hoja de tabaco' src='img/hoja.png' className='hoja-tobaco'/>\r\n                <div className='Banner-desc'>\r\n                    <h1>¿QUÉ ES ARTOD?</h1>\r\n                    <h3>Lorem Ipsum dolor sit amet, consectetur adipiscing elit. sed do eiusmod tempor incididunt ut labore et.</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport './ProductCard.css';\r\nconst ProductCard = (props)=>{\r\n    return(\r\n        <div className='ProductCard'>\r\n            <img src={props.srcImg}/>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React, {Component} from 'react';\r\nimport './Products.css';\r\nimport ProductCard from './ProductCard/ProductCard';\r\n\r\nclass Products extends Component{\r\n    render(){\r\n        return(\r\n            <div className='Products'>\r\n                <h1>PRODUCTOS</h1>\r\n                <div className='ProductList'>\r\n                    <a href='#'><ProductCard srcImg='img/tabaco.png' title='TABACO'/></a>\r\n                    <a href='#'><ProductCard srcImg='img/encendedores.png' title='ENCENDEDORES'/></a>\r\n                    <a href='#'><ProductCard srcImg='img/filtrossedas.png' title=\"FILTROS & SEDAS\"/></a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;","import React, {Component} from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <div className='Footer'>\r\n                \r\n                <div className='Foot'>\r\n                    <h1>artod.</h1>\r\n                    <a href='https://www.instagram.com'><img src='img/ig.png' alt='Instagram'/></a>\r\n                    <h4>2019</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home/Home';\nimport Banner from './Components/Banner/Banner';\nimport Products from './Components/Products/Products';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n      <Banner/>\n      <Products/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}